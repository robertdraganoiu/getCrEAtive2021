{"version":3,"sources":["SignOut.js","UserRoom.js","utils.js","SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["SignOut","auth","currentUser","className","onClick","signOut","UserRoom","name","displayName","split","firestore","firebase","query","collection","where","email","docRef","doc","get","then","exists","console","log","data","set","mail","totalWins","catch","error","useCollectionData","idField","userData","SignIn","signInWithPopup","provider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","GoogleAuthProvider","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAWeA,EARC,WACZ,OAAOC,EAAKC,aACV,mCACA,wBAAQC,UAAU,MAAMC,QAAS,kBAAMH,EAAKI,WAA5C,yBC6CSC,EAxCE,WAEb,IAAMC,EAAON,EAAKC,YAAYM,YAAYC,MAAM,IAAK,GAC/CC,EAAYC,IAASD,YAErBE,EADWF,EAAUG,WAAW,SACfC,MAAM,OAAQ,KAAMb,EAAKC,YAAYa,OAExDC,EAASN,EAAUG,WAAW,SAASI,IAAIhB,EAAKC,YAAYa,OAE5DC,EAAOE,MAAMC,MAAK,SAACF,GACXA,EAAIG,OACJC,QAAQC,IAAI,iBAAkBL,EAAIM,QAElCP,EAAOQ,IAAI,CACPC,KAAMxB,EAAKC,YAAYa,MACvBW,UAAW,IAEdP,MAAK,WACFE,QAAQC,IAAI,qCAEfK,OAAM,SAACC,GACJP,QAAQO,MAAM,2BAA4BA,SAGnDD,OAAM,SAACC,GACNP,QAAQC,IAAI,0BAA2BM,MAzB5B,ICPCF,EDOD,EA4BAG,YAAkBjB,EAAO,CAACkB,QAAS7B,EAAKC,YAAYa,QAAhEgB,EA5BY,oBA8BnB,OACE,sBAAK5B,UAAU,YAAf,UACA,yCAAYI,KACZ,mDAAuBwB,GAAYA,EAAS,GAAKA,EAAS,GAAGL,UAAY,gBACzE,6CAAiBK,GAAYA,EAAS,ICzCpBL,EDyCiCK,EAAS,GAAGL,UCxC7DA,EAAY,EACL,aACAA,EAAY,EACZ,OACAA,EAAY,GACZ,UACAA,EAAY,GACZ,iBAEA,UD+BmE,gBAC5E,cAAC,EAAD,QE7BSM,EAbA,WAMX,OACA,qBAAK7B,UAAU,YAAf,SACE,wBAAQA,UAAU,MAAMC,QAAS,WAL/BH,EAAKgC,gBAAgBC,IAKvB,oCCFNvB,IAASwB,cAAc,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAGF,IAAMxC,EAAOU,IAASV,OAChBiC,EAAW,IAAIvB,IAASV,KAAKyC,mBAkB3BC,MAhBf,WAAgB,IAAD,EACEC,YAAa3C,GAArB4C,EADM,oBAGb,OACE,iCACE,2BAIA,kCACGA,EAAO,cAAC,EAAD,CAAU5C,KAAMA,IAAW,cAAC,EAAD,CAAQA,KAAMA,UCpB1C6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.09f0bd37.chunk.js","sourcesContent":["import React from 'react'\nimport { auth } from './App'\n\nconst SignOut = () => {\n    return auth.currentUser && (\n      <>\n      <button className='btn' onClick={() => auth.signOut()} >Sign out</button>\n      </>\n    );\n};\n\nexport default SignOut;","import React, { useState } from 'react'\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport SignOut from './SignOut';\nimport { auth } from './App'\nimport { getRank } from './utils';\n\nconst UserRoom = () => {\n\n    const name = auth.currentUser.displayName.split(' ', 1);\n    const firestore = firebase.firestore();\n    const usersRef = firestore.collection('users');\n    const query = usersRef.where(\"mail\", \"==\", auth.currentUser.email);\n\n    var docRef = firestore.collection(\"users\").doc(auth.currentUser.email);\n\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                console.log(\"Document data:\", doc.data());\n            } else {\n                docRef.set({\n                    mail: auth.currentUser.email,\n                    totalWins: 0\n                })\n                .then(() => {\n                    console.log(\"Document successfully written!\");\n                })\n                .catch((error) => {\n                    console.error(\"Error writing document: \", error);\n                });\n            }\n        }).catch((error) => {\n            console.log(\"Error getting document:\", error);\n        });\n\n    const [userData] = useCollectionData(query, {idField: auth.currentUser.email});\n\n    return (\n      <div className='container'>\n      <h1>Hello, {name}</h1>\n      <h3>Your total wins: {(userData && userData[0] ? userData[0].totalWins : \"Loading...\")}</h3>\n      <h3>Your rank: {(userData && userData[0] ? getRank(userData[0].totalWins) : \"Loading...\")}</h3>\n      <SignOut />\n      </div>\n    );\n  };\n\nexport default UserRoom;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nexport const getRank = (totalWins) => {\n    if (totalWins < 1) {\n        return \"Total Noob\";\n    } else if (totalWins < 5) {\n        return \"Noob\";\n    } else if (totalWins < 10) {\n        return \"Garbage\";\n    } else if (totalWins < 20) {\n        return \"Better Garbage\";\n    } else {\n        return \"Decent\";\n    }\n}","import React from 'react'\n\nimport { auth, provider } from \"./App\"\n\nconst SignIn = () => {\n\n    const signIn = () => {\n        auth.signInWithPopup(provider);\n    }\n\n    return (\n    <div className='container'>\n      <button className='btn' onClick={() => signIn()}>Sign in with Google</button>\n    </div>\n    );\n};\n\nexport default SignIn;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nimport React from 'react';\nimport UserRoom from './UserRoom';\nimport SignIn from './SignIn';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAL5dV-Vjnt9eMVqGHTxg-SLsmseaACRo8\",\n  authDomain: \"dizzylotarena-8e56c.firebaseapp.com\",\n  projectId: \"dizzylotarena-8e56c\",\n  storageBucket: \"dizzylotarena-8e56c.appspot.com\",\n  messagingSenderId: \"912379030615\",\n  appId: \"1:912379030615:web:2bb33038268715ee95c712\"\n})\n\nexport const auth = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  \n  return (\n    <main>\n      <header>\n\n      </header>\n\n      <section>\n        {user ? <UserRoom auth={auth} /> : <SignIn auth={auth} />}\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}